# -*- coding: utf-8 -*-
# Copyright (C) 2018-2021  Vincent Pelletier <plr.vincent@gmail.com>
#
# This file is part of python-gpiochip2.
# python-gpiochip2 is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# python-gpiochip2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with python-gpiochip2.  If not, see <http://www.gnu.org/licenses/>.

from ctypes import _CData
from typing import Union, Type

ctype_type_or_instance = Union[_CData, Type[_CData]]

def IOC(dir: int, type: int, nr: int, size: int) -> int: ...
def IOC_TYPECHECK(t: ctype_type_or_instance) -> int: ...
def IO(type: int, nr: int) -> int: ...
def IOR(type: int, nr: int, size: ctype_type_or_instance) -> int: ...
def IOW(type: int, nr: int, size: ctype_type_or_instance) -> int: ...
def IOWR(type: int, nr: int, size: ctype_type_or_instance) -> int: ...
def IOC_DIR(nr: int) -> int: ...
def IOC_TYPE(nr: int) -> int: ...
def IOC_NR(nr: int) -> int: ...
def IOC_SIZE(nr: int) -> int: ...
